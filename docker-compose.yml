name: micro-arch
services:
  auth-svc:
    build:
      context: ./auth-svc
      dockerfile: ./Dockerfile
    depends_on:
      - db
    ports:
      - 5004:5004
    environment:
      - APP_PORT=${APP_PORT}
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
  gateway-svc:
    build:
      context: ./gateway-svc
      dockerfile: ./Dockerfile
    depends_on:
      db:
        condition: service_started
      mongo:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    ports:
      - 8080:8080
    environment:
      - AUTH_SVC_ADDRESS=${AUTH_SVC_ADDRESS}
      - MONGO_URI=${MONGO_URI}
      - RABBITMQ_SVC_NAME=${RABBITMQ_SVC_NAME}
  db:
    image: mysql
    ports:
      - 3306:3306
    restart: always
    volumes:
      - ./auth-svc/volumes/mysql/:/var/lib/mysql
      - ./auth-svc/mysql-scripts:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 15672:15672
      - 5672:5672
    restart: always
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 3
    volumes:
      - ./rabbit/volumes/rabbit:/var/lib/rabbitmq
      - ./rabbit/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./rabbit/definitions.json:/etc/rabbitmq/definitions.json:ro
  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
  # mp3-svc:
  #   build:
  #     context: ./mp3-svc
  #     dockerfile: ./Dockerfile
  #   ports:
  #     - 8000:8000
